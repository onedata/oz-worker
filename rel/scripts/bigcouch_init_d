#!/bin/sh

### BEGIN INIT INFO
# Provides:		        bigcouch
# Required-Start:	    $local_fs $remote_fs $network $time
# Required-Stop:	    $local_fs $remote_fs $network $time globalregistry
# Should-Start:		    $syslog
# Should-Stop:		    $syslog
# Default-Start:	    3 4 5
# Default-Stop:		    0 1 2 6
# Short-Description:	bigcouch service
# Description:	        Scalable server that can store data needed by large scale distributed systems to cooperate.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

RETVAL=0
NAME=bigcouch
DEAMON=/opt/bigcouch/bin/${NAME}
LOCKFILE=/var/lock/subsys/${NAME}
PIDFILE=/var/run/${NAME}/${NAME}.pid

# Check for script
[ -x ${DEAMON} ] || exit 0

# Read configuration variable file if it is present and readable
[ -r /etc/sysconfig/${NAME} ] && . /etc/sysconfig/${NAME}

# `service` strips all environmental VARS so
# if no HOME was set in /etc/sysconfig/${NAME} then set one here
# to the data directory for erlexec's sake
if [ -z "$HOME" ]; then
    export HOME=
fi

status -p ${PIDFILE} -l $(basename ${LOCKFILE}) ${NAME} >/dev/null 2>&1
RUNNING=$?

check_pid_status() {
    pid=$(ps ax | grep beam.smp | grep "\-progname ${NAME}" | awk '{print $1}')
    if [ "$pid" = "" ]; then
        return 1
    else
        return 0
    fi
}

start() {
    # Start daemons.
    echo -n $"Starting ${NAME}: "
    nohup ${DEAMON} start &
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
        touch ${LOCKFILE}
        success
    else
        failure $"${NAME} start"
    fi
    echo
    return $RETVAL
}

stop() {
    echo -n $"Stopping ${NAME}: "
    su - root -c "ps -ef | grep beam.smp | grep '\-progname ${NAME} ' | grep -v grep | awk '{print \$2}' | xargs kill -9"
    for n in $(seq 1 10); do
        sleep 1
        check_pid_status
        RETVAL=$?
        if [ $RETVAL -eq 1 ]; then
            break
        fi
    done
    if [ $RETVAL -eq 1 ]; then
        rm -f ${LOCKFILE} ${PIDFILE}
        success
        echo && return 0
    else
        failure $"${NAME} hardstop"
        echo && return 1
    fi
}

case "$1" in
    start)
        [ ${RUNNING} -eq 0 ] && exit 0
        start
        ;;
    stop)
        if [ ${RUNNING} -eq 0 ]; then
            stop
        else
            check_pid_status
            RETVAL=$?
            if [ $RETVAL -eq 1 ]; then
                rm -f ${LOCKFILE} ${PIDFILE}
            fi
            exit 0
        fi
        ;;
    restart|force-reload)
        [ ${RUNNING} -eq 0 ] && stop
        start
        ;;
    hardstop)
        [ ${RUNNING} -eq 0 ] || exit 0
        hardstop
        ;;
    condrestart|try-restart)
        [ ${RUNNING} -eq 0 ] || exit 0
        restart
        ;;
    status)
        status -p ${PIDFILE} -l $(basename ${LOCKFILE}) ${NAME}
        ;;
    ping)
        ${DEAMON} ping || exit $?
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|force-reload|hardstop|condrestart|try-restart|status|ping}"
        exit 1
esac

exit $?