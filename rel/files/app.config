[
    %% SASL config
    {sasl, [{sasl_error_logger, false}]},

    %% logger configuration
    {lager, [
        {colored, true},
        {log_root, "{{platform_log_dir}}"},
        {handlers, [
            %% show info level or higher level logs at console
            {lager_console_backend, [
                {level, info}, {formatter, lager_default_formatter},
                {formatter_config, [color, "[", sev, " ", time, " ", pid, "] ", message, "\e[0m\r\n"]}
            ]},
            %% rotate error log when it reaches 50 MB; keep 10 rotated logs
            {lager_file_backend, [
                {file, "error.log"},
                {level, error},
                {size, 52428800},
                {count, 10},
                {formatter, lager_default_formatter},
                {formatter_config, ["[", sev, " ", date, " ", time, " ", pid, "] ", message, "\n"]}
            ]},
            %% rotate info log when it reaches 50 MB; keep 10 rotated logs
            {lager_file_backend, [
                {file, "info.log"},
                {level, info},
                {size, 52428800},
                {count, 10},
                {formatter, lager_default_formatter},
                {formatter_config, ["[", sev, " ", date, " ", time, " ", pid, "] ", message, "\n"]}
            ]},
            %% rotate debug log when it reaches 50 MB; keep 10 rotated logs
            {lager_file_backend, [
                {file, "debug.log"},
                {level, debug},
                {size, 52428800},
                {count, 10},
                {formatter, lager_default_formatter},
                {formatter_config, ["[", sev, " ", date, " ", time, " ", pid, "] ", message, "\n"]}
            ]}
        ]},
        % Limit for the number of messages per second allowed from error_logger
        {error_logger_hwm, 200},
        % When lager should change mode to synchronous (log queue is longer than async_threshold)
        {async_threshold, 500},
        % When lager should return from synchronous mode to asynchronous (log queue is shorter than (async_threshold - async_threshold_window)
        {async_threshold_window, 50}
    ]},

    %% erldns config
    {erldns, [
        {servers, [
            [{name, inet_all_1}, {address, "0.0.0.0"}, {port, 53}, {family, inet}, {processes, 2}]
        ]},

        {dnssec, [
            {enabled, true}
        ]},

        {use_root_hints, false},
        {catch_exceptions, false},
        {zones, "{{platform_data_dir}}/empty_zones.erldns.json"},
        {pools, [
            {tcp_worker_pool, erldns_worker, [
                {size, 10},
                {max_overflow, 20}
            ]}
        ]}
    ]},

    {ctool, [
        % Backup file that stores the information needed to restore the
        % previous clock synchronization.
        {clock_sync_backup_file, "{{platform_etc_dir}}/time_synchronization_data.json"},

        % Path to the JSON file holding information about services compatibility
        % and verified gui hashes. This file evolves during service's lifetime -
        % can be overwritten by a newer registry when such is available.
        {current_compatibility_registry_file, "{{platform_etc_dir}}/compatibility.json"},
        % Path to the default compatibility.json for current software version.
        {default_compatibility_registry_file, "{{platform_data_dir}}/compatibility.default.json"},

        % Path to compressed MaxMind's GeoLite2 databases used for mapping
        % IP addresses to ASN and country.
        {geo_db_file, #{
            asn => "{{platform_etc_dir}}/geo-db/geo-db-asn.tar.gz",
            country => "{{platform_etc_dir}}/geo-db/geo-db-country.tar.gz"
        }},
        % File that holds info about last successful and attempted updates
        % of the MaxMind DBs.
        {geo_db_status_file, "{{platform_etc_dir}}/geo-db/geo-db-status.json"}
    ]},

    %% cluster_worker config
    {cluster_worker, [
        % Names of modules implementing given plugins
        {datastore_config_plugin, datastore_config_plugin},
        {node_manager_plugin, node_manager_plugin},

        % Logfiles config - they go to oz-worker log dir
        {monitoring_log_file, "{{platform_log_dir}}/node_manager_monitoring.log"},
        {throttling_log_file, "{{platform_log_dir}}/throttling_monitoring.log"},

        % Exometer config
        {counter_name_prefixes, [comp, oz_worker]}
    ]},

    %% oz_worker config
    {oz_worker, [
        % Developer mode - enables developer features such as REST endpoints
        % with functionalities used in tests.
        {dev_mode, false},

        % Build version in form:
        % <number of commits since last tag>-g<last commit hash abbrev>
        % e.g. 19-g0d0fd5b
        {build_version, "{{{build_version}}}"},

        %% Flag indicating whether to allow subdomain delegation or not.
        {subdomain_delegation_supported, true},

        %% Indicates policy enforced during provider registration:
        %%  open - anyone can acquire a registration token and register a new
        %%         Oneprovider
        %%  restricted - requires an administrative privilege 'oz_providers_invite`
        %%               to generate a provider registration token. The token
        %%               can be issued for someone else.
        {provider_registration_policy, open},

        %% Also used as the certificate domain and to provider CRLs.
        {http_domain, "127.0.0.1"},

        % Display name of the OZ instance and related config
        {oz_name, undefined},
        % Subtitle displayed below the Zone name on the login page, can be empty
        {brand_subtitle, "Isolated Zone"},
        {admin_emails, ["info@onezone.example.com"]},

        % Path to custom plugins directory
        {plugins_directory, "{{platform_data_dir}}/plugins"},

        %% DB config
        {db_nodes, ['db@127.0.0.1:11211']},

        %% ===================================================================
        %% PORTS
        %% ===================================================================

        %% Port on which HTTPS server is started
        {https_server_port, 443},
        %% Port on which HTTP server is started
        {http_server_port, 80},

        %% ===================================================================
        %% Server certificates
        %% ===================================================================

        %% NOTE: below envs are overwritten by onepanel during deployment. You
        %% should always use onepanel to manage web certs, unless you really
        %% know what you are doing.
        %% Path to private key used by web server
        {web_key_file, "{{platform_etc_dir}}/certs/web_key.pem"},
        %% Path to certificate used by web server
        {web_cert_file, "{{platform_etc_dir}}/certs/web_cert.pem"},
        %% Path to certificate chain file used by web server
        {web_cert_chain_file, "{{platform_etc_dir}}/certs/web_chain.pem"},

        %% Path to directory with trusted CA certificates
        {cacerts_dir, "{{platform_etc_dir}}/cacerts"},

        %% ===================================================================
        %% HTTP & HTTPS servers config
        %% ===================================================================

        %% Number of accepting processes in the listeners
        {http_acceptors, 20},
        {https_acceptors, 100},
        %% Request timeout in milliseconds, meaning how long the server should
        %% wait for an incoming request since the last activity until it closes
        %% the connection.
        {http_request_timeout, 30000},
        {https_request_timeout, 30000},
        %% Maximum number of HTTP requests without closing the connection
        %% (HTTP/1.1 only)
        {https_max_keepalive, 30},

        %% Prefix to the REST API - all paths must begin with it.
        %% Must begin with slash
        {rest_api_prefix, "/api/v3/onezone"},

        {letsencrypt_challenge_api_prefix, "/.well-known/acme-challenge"},
        {letsencrypt_challenge_static_root, "/tmp/oz_worker/http/.well-known/acme-challenge/"},

        %% Timeout when waiting for response from Onepanel -
        %% concerns proxying requests to Onepanel via Onezone.
        {onepanel_proxy_recv_timeout_sec, 30},

        %% ===================================================================
        %% Authentication and authorization
        %% ===================================================================

        % Path to auth.config file
        {auth_config_file, "{{platform_etc_dir}}/auth.config"},
        % Path to test.auth.config file that can be used to test various IdP
        % configurations on a production system without interfering with the
        % standard login page (the test login page is under /#/test/login).
        {test_auth_config_file, "{{platform_etc_dir}}/test.auth.config"},
        % How long should IdPs config file be cached
        {auth_config_cache_ttl_seconds, 60}, % 1 minute
        % How long should XRDS files be cached (OpenId)
        {openid_xrds_cache_ttl_seconds, 3600}, % 1 hour
        % After this time, login procedure via OIDC/SAML expires (if not completed)
        {state_token_ttl_secs, 300},
        % How long before expiration Onezone should try to refresh IdP access tokens
        {idp_access_token_refresh_threshold, 300},
        % If an IdP does not inform about access token lifespan through the
        % "expires_in" parameter, this value is assumed (in seconds).
        {assumed_idp_access_token_lifespan, 3600},
        % TTL of tokens (seconds) issued for GUI apps (the app refreshes them automatically)
        {gui_token_ttl, 86400},
        % Maximum allowed TTL for temporary tokens (security measure as
        % temporary tokens are non revocable individually - it is only possible
        % to invalidate all at once).
        {max_temporary_token_ttl, 2592000}, % 1 month
        % TTL for offline access tokens acquired by Oneproviders for long
        % lasting operations in user context. Note that it must not exceed the
        % max_temporary_token_ttl (in such case it will be lowered implicitly).
        {offline_access_token_ttl, 2592000}, % 1 month
        % Directory where logs from diagnostic login attempts are stored
        % (using the test mode via the test login page).
        {test_mode_logins_log_dir, "{{platform_log_dir}}/test_mode_logins"},

        %% ===================================================================
        %% GUI config
        %% ===================================================================

        %% Path to packaged GUI static files.
        {ozw_gui_package_path, "{{platform_data_dir}}/ozw_gui_static.tar.gz"},
        {default_hrv_gui_package_path, "{{platform_data_dir}}/hrv_gui_static.tar.gz"},

        %% Root directory holding all GUIs (Onezone and Oneproviders, workers and panels).
        {gui_static_root, "{{platform_etc_dir}}/gui_static"},

        %% By default, GUI packages uploaded by services operating under Onezone
        %% or harvester admins are checked against known SHA-256 check-sums,
        %% using the compatibility registry (see current_compatibility_registry_file).
        %% Unverified packages are declined, unless the verification is disabled.
        %% WARNING: disabling GUI package verification poses a severe security
        %% threat, allowing Oneprovider owners to upload arbitrary GUI to
        %% Onezone (which is then hosted in Onezone's domain).
        {gui_package_verification, true},

        %% Toggle GUI package verification for harvesters only. Should be used
        %% with caution, when harvester admins can be trusted.
        %% NOTE: ignored if gui_package_verification is false.
        {harvester_gui_package_verification, true},

        %% Directory for custom static files for GUI (e.g. auth icons),
        %% files that are put there will be served under /ozw/onezone/custom/<path>
        {gui_custom_static_root, "/var/www/html/oz_worker/custom"},
        {legacy_gui_custom_static_root, "/var/www/html/custom/oz_worker"},

        %% Enable debug logs in browser console
        {gui_debug_mode, false},

        %% Timeout after which to invalidate
        %% basic auth cache record for given user
        {basic_auth_cache_expiration_timeout, 5000},

        %% ===================================================================
        %% Graph Sync config
        %% ===================================================================

        %% Healthcheck interval for changes stream used by Graph Sync server
        {gs_server_stream_healthcheck_interval, 5000},

        %% ===================================================================
        %% DNS config
        %% ===================================================================

        %% ===================================================================
        %% Static DNS entries
        %% ===================================================================

        %% All record names specified below should only contain the subdomain
        %% part which will be concatenated to the onezone domain.
        %% Subdomain can be left blank (<<>>) to create records
        %% for the onezone domain itself.

        % Static a entries.
        % The subdomain must be a binary and must not begin with the dot character.
        % IPs should be given as a list of tuples
        % Example:
        % {dns_static_a_records, [
        %     {<<"example-subdomain">>, [{10,0,0,1}, {10,0,0,2}]}
        % ]}
        {dns_static_a_records, []},

        % Static ns entries. Each tuple should contain a subdomain name
        % and a list of nameserver domains.
        % Example:
        % {dns_static_ns_records, [
        %     {<<"example-subdomain">>, [
        %         <<"ns1.example-subdomain.onezone.org">>
        %     ]}
        % ]}
        {dns_static_ns_records, []},


        % Static txt entries. Each tuple should contain a subdomain and
        % value.
        % Both subdomain and value should be a binary.
        % Example:
        % {dns_static_txt_records, [
        %     {<<"example-subdomain">>, <<"record-value">>}
        % ]}
        {dns_static_txt_records, []},

        % Static mx entries. Each tuple should contain a subdomain,
        % email server name and preference (integer).
        % Example:
        % {dns_static_mx_records, [
        %     {<<"">>, <<"mail.onezone.org">>, 10}
        % ]}
        {dns_static_mx_records, []},

        % Static cname entries. Each tuple should
        % contain the name (alias, relative to onezone domain) and domain it should point to.
        % Example:
        % {dns_static_cname_records, [
        %     {<<"www">>, <<"onezone.org">>}
        % ]}
        {dns_static_cname_records, []},

        %% ===================================================================
        %% DNS configuration
        %% ===================================================================

        % maximum number of ips to be presented as subdomain
        % ns1, ns2, ns3 etc. in NS records
        {dns_ns_max_entries, 10},

        % minimum number of resolved nsX domains. If the number specified
        % is higher than number of oz_worker nodes, some domains will resolve
        % to the same IP address. Must not be higher than ns_max_entries
        % Use this option if your domain registrar enforces
        % a minimum number of Nameserver addresses.
        {dns_ns_min_entries, 2},

        %% SOA record parameters
        % Override line below to set custom Admin Email for SOA record.
        % Default is admin.ZoneDomain
        %{dns_soa_admin_mailbox, "dns-admin.onezone.example.com"},

        % Time interval before the zone should be refreshed
        {dns_soa_refresh, 7200},
        % Time interval that should elapse before a failed refresh should be retried
        {dns_soa_retry, 1800},
        % Time value that specifies the upper limit on the time interval that
        % can elapse before the zone is no longer authoritative
        {dns_soa_expire, 1209600},
        % Time a NAME ERROR = NXDOMAIN result may be cached by any resolver
        {dns_soa_minimum, 120},

        {dns_a_ttl, 120},
        {dns_ns_ttl, 120},
        {dns_soa_ttl, 120},
        {dns_txt_ttl, 120},
        {dns_mx_ttl, 120},

        %% ===================================================================
        %% Space management config
        %% ===================================================================

        %% Decides if every user should get a new space when an account for
        %% him is created.
        {enable_automatic_first_space, false},

        %% Minimum size of support that a provider must offer (smaller values
        %% will be declined).
        {minimum_space_support_size, 1000000}, % 1 MB
    
        %% When enabled it is possible to support space with multiple imported storages.
        %% NOTE: enabling this option may cause undefined behaviour in case of file conflicts 
        %% (preexisting files under the same path) on supporting storages.
        {allow_multiple_imported_storages_supports, false},

        {available_space_tags, #{
            <<"general">> => [
                <<"archival">>,
                <<"big-data">>,
                <<"copyrighted">>,
                <<"demo">>,
                <<"dynamic">>,
                <<"experiment">>,
                <<"EU-funded">>,
                <<"images">>,
                <<"incomplete">>,
                <<"multidimensional-data">>,
                <<"open-data">>,
                <<"open-science">>,
                <<"preliminary">>,
                <<"raw-data">>,
                <<"simulation">>,
                <<"spatial-data">>,
                <<"static">>,
                <<"text-data">>,
                <<"training-set">>,
                <<"videos">>
            ],
            <<"domains">> => [
                <<"agriculture">>,
                <<"culture">>,
                <<"economy">>,
                <<"education">>,
                <<"energy">>,
                <<"environment">>,
                <<"finance">>,
                <<"fisheries">>,
                <<"food">>,
                <<"forestry">>,
                <<"government">>,
                <<"health">>,
                <<"international-issues">>,
                <<"justice">>,
                <<"legal-system">>,
                <<"population">>,
                <<"public-safety">>,
                <<"public-sector">>,
                <<"regions-and-cities">>,
                <<"science">>,
                <<"society">>,
                <<"sport">>,
                <<"technology">>,
                <<"transport">>
            ]
        }},

        %% ===================================================================
        %% Groups config
        %% ===================================================================

        %% Predefined groups config - groups that are created automatically
        %% after the application has started. If the groups exist, no action
        %% is performed.
        %% Each group is represented by a map with keys
        %% id, name, oz_privileges.
        %% Allows to specify the ID, name and OZ API privileges of every group.
        %% oz_privileges can be either an explicit list of privileges or a
        %% tuple of atoms indicating module and function to call which must
        %% return the list of privileges.
        {predefined_groups, [
            #{
                id => <<"admins">>,
                name => <<"Admins">>,
                oz_privileges => {privileges, oz_privileges}
            },
            #{
                id => <<"all_users">>,
                name => <<"All users">>,
                oz_privileges => []
            }
        ]},

        %% Decides if global groups should be enabled. If so, every user that
        %% is created will automatically be added to group defined in
        %% the global_groups env variable.
        {enable_global_groups, false},

        %% A list of global groups - every new user is added to them if the
        %% enable_global_groups variable is true. Must contain a list of tuples:
        %%     the first element is the id of a group (must be pre-created using
        %%         the predefined_groups variable)
        %%     the second element is the list of group privileges that will be
        %%         granted by default to users that are added to the group.
        {global_groups, [
            {<<"all_users">>, []}
        ]},

        %% Mapping onepanel_role => [group_id]. When a user is
        %% retrieved from onepanel, his role will be sent in response. This env
        %% allows to define to which groups such user should be added
        %% automatically upon first login.
        %% If the role changes, any consecutive login will cause the user
        %% to be added to all groups connected to his new role, but will not
        %% cause the user to be removed from any group!
        {onepanel_role_to_group_mapping, #{
            <<"admin">> => [<<"admins">>]
        }},


        %% ===================================================================
        %% Open Data
        %% ===================================================================

        %% Prefix to the OAI-PMH API - all paths must begin with it
        {oai_pmh_api_prefix, "/oai_pmh"},

        %% Domain of a third party xRootD server that is able to serve open
        %% data collections (shared data that has had a handle generated)
        %% under a publicly available endpoint constructed like the following:
        %% root://${DOMAIN}//data/${SPACE_ID}/${SPACE_ID}/${SHARE_ID}${ABS_FILE_PATH_IN_SHARE}
        %% Should be set to undefined if there is no such server.
        {open_data_xrootd_server_domain, undefined},

        %% ===================================================================
        %% Harvesters config
        %% ===================================================================

        {default_harvesting_backend_type, undefined}, % e.g. elasticsearch_harvesting_backend
        {default_harvesting_backend_endpoint, undefined}, % e.g. <<"127.0.0.1:9200">>
        {harvesting_backend_request_timeout, 120000}, % 2 minutes

        %% ===================================================================
        %% Automation
        %% ===================================================================

        %% Id of the special workflow schema used for BagIt archive uploading.
        %% If defined, it will cause a special "Upload BagIt" option to appear
        %% in Oneprovider data browser GUI, given that the Oneprovider instance
        %% has OpenFaaS configured. It must point to an existing workflow
        %% schema, which must be defined manually by Onezone admins and placed
        %% in an inventory, where users that are to use the BagIt upload feature
        %% have access.
        {bagit_uploader_workflow_schema_id, undefined},

        %% Default resources specification for a lambda that will be taken
        %% if there is no user-defined resource spec in the lambda
        %% (and no resource spec override in the task using the lambda).
        {default_atm_resource_spec, #{
            <<"cpuRequested">> => 0.1,
            <<"cpuLimit">> => null,
            <<"memoryRequested">> => 104857600,
            <<"memoryLimit">> => null,
            <<"ephemeralStorageRequested">> => 104857600,
            <<"ephemeralStorageLimit">> => null
        }},

        %% ===================================================================
        %% Space marketplace configuration
        %% ===================================================================

        %% Toggles the space marketplace features. If disabled, no spaces can be
        %% advertised and/or discovered.
        {space_marketplace_enabled, true},  % @TODO VFS-10640 disable functions when enabled=false
        %% How often pending membership requests are pruned, i.e. requests that are no
        %% longer valid/applicable (e.g. when a space is deleted from marketplace or a user
        %% is added to it in some other way) are removed from the pending requests of a user.
        {space_marketplace_pending_request_pruning_interval_seconds, 86400},  % a day
        %% How often is it possible to repeat a space membership request that is pending,
        %% which will cause a reminder to be sent to the space operator.
        {space_marketplace_min_backoff_between_reminders_seconds, 604800},  % a week
        %% How often is it possible to repeat a space membership request that has been
        %% rejected in the past.
        {space_marketplace_min_backoff_after_rejection_seconds, 2592000},  % a month

        %% ===================================================================
        %% Mailer configuration
        %% ===================================================================

        %% Onezone uses a simple SMTP relay mechanism to send emails using an
        %% external mailbox. Below envs must be set for it to function properly.
        %% As they include a password, these settings must be kept secret.

        %% Domain of the SMTP relay server that will be used to send emails.
        {onezone_mailer_relay, undefined},  % e.g. "smtp.gmail.com"
        %% Username of the account recognized by the relay server.
        {onezone_mailer_username, undefined},  % e.g. "username@gmail.com"
        %% Password to the above-mentioned account.
        {onezone_mailer_password, undefined},  % e.g. "secret-password"
        %% The address that will appear in the "From" field of the emails;
        %% defaults to the same as onezone_mailer_username if undefined.
        {onezone_mailer_sender_address, undefined},  % e.g. "admin@onezone.onedata.org"
        %% The name that will appear in the "From" field of the emails.
        {onezone_mailer_sender_name, "Onezone mailman"},
        %% Custom options that will be passed to the SMTP client used by Onezone;
        %% see: https://github.com/gen-smtp/gen_smtp and refer to their documentation.
        %% NOTE: the 'relay', 'username' and 'password' opts are filled in by Onezone
        %% based on the above config.
        {onezone_mailer_smtp_client_opts, []}
    ]}
].
