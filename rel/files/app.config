[
    %% SASL config
    {sasl, [{sasl_error_logger, false}]},

    %% logger configuration
    {lager, [
        {colored, true},
        {handlers, [
            %% show info level or higher level logs at console
            {lager_console_backend, [{level, info}, {formatter, lager_default_formatter},
                {formatter_config, [color, "[", sev, " ", time, " ", pid, "] ", message, "\e[0m\r\n"]}]},
            %% rotate error log when it reaches 50 MB; keep 10 rotated logs
            {lager_file_backend, [
                {file, "{{platform_log_dir}}/error.log"},
                {level, error},
                {size, 52428800},
                {count, 10},
                {formatter, lager_default_formatter},
                {formatter_config, ["[", sev, " ", date, " ", time, " ", pid, "] ", message, "\n"]}
            ]},
            %% rotate info log when it reaches 50 MB; keep 10 rotated logs
            {lager_file_backend, [
                {file, "{{platform_log_dir}}/info.log"},
                {level, info},
                {size, 52428800},
                {count, 10},
                {formatter, lager_default_formatter},
                {formatter_config, ["[", sev, " ", date, " ", time, " ", pid, "] ", message, "\n"]}
            ]},
            %% rotate debug log when it reaches 50 MB; keep 10 rotated logs
            {lager_file_backend, [
                {file, "{{platform_log_dir}}/debug.log"},
                {level, debug},
                {size, 52428800},
                {count, 10},
                {formatter, lager_default_formatter},
                {formatter_config, ["[", sev, " ", date, " ", time, " ", pid, "] ", message, "\n"]}
            ]}
        ]},
        % Limit for the number of messages per second allowed from error_logger
        {error_logger_hwm, 200},
        % When lager should change mode to synchronous (log queue is longer than async_threshold)
        {async_threshold, 500},
        % When lager should return from synchronous mode to asynchronous (log queue is shorter than (async_threshold - async_threshold_window)
        {async_threshold_window, 50}
    ]},

    %% erldns config
    {erldns,[
        {servers, [
            [{name, inet_all_1}, {address, "0.0.0.0"}, {port, 53}, {family, inet}, {processes, 2}]
        ]},

        {dnssec, [
            {enabled, true}
        ]},

        {use_root_hints, false},
        {catch_exceptions, false},
        {zones, "{{platform_data_dir}}/empty_zones.erldns.json"},
        {pools, [
            {tcp_worker_pool, erldns_worker, [
                {size, 10},
                {max_overflow, 20}
            ]}
        ]}
    ]},

    %% cluster_worker config
    {cluster_worker, [

        %% External IP of this node - used by DNS
        %% can be set to a tuple or string, for example:
        %% {external_ip, {10,0,0,1}}, or:
        %% {external_ip, "10.0.0.1"},
        {external_ip, undefined},

        %% ===================================================================
        %% PLUGINS
        %% ===================================================================

        % names of modules implementing given plugins
        {datastore_config_plugin, datastore_config_plugin},
        {node_manager_plugin, node_manager_plugin},

        %% ===================================================================
        %% Datastore changes
        %% ===================================================================

        {couchbase_changes_batch_size, 3},
        {couchbase_changes_update_interval, 1000},
        {couchbase_changes_stream_batch_size, 3},
        {couchbase_changes_stream_update_interval, 1000},

        %% ===================================================================
        %% Logs
        %% ===================================================================

        {monitoring_log_file, "{{platform_log_dir}}/node_manager_monitoring.log"},
        {throttling_log_file, "{{platform_log_dir}}/throttling_monitoring.log"},

        %% ===================================================================
        %% Exometer
        %% ===================================================================

        {counter_name_prefixes, [comp, oz_worker]}
    ]},

    %% oz_worker config
    {oz_worker, [
        % Developer mode - enables developer features such as REST endpoints
        % with functionalities used in tests.
        {dev_mode, false},

        % Build version in form:
        % <number of commits since last tag>-g<last commit hash abbrev>
        % e.g. 19-g0d0fd5b
        {build_version, "{{{build_version}}}"},

        % Compatible versions of Oneprovider, this is advertised so that
        % Oneprovider instances can check their compatibility.
        {compatible_op_versions, [
            "18.02.0-beta1",
            "18.02.0-beta2",
            "18.02.0-beta3",
            "18.02.0-beta4",
            "18.02.0-beta5",
            "18.02.0-beta6",
            "18.02.0-rc1",
            "18.02.0-rc2",
            "18.02.0-rc3",
            "18.02.0-rc4",
            "18.02.0-rc5",
            "18.02.0-rc6",
            "18.02.0-rc7",
            "18.02.0-rc8",
            "18.02.0-rc9"
        ]},

        %% Flag indicating whether to allow subdomain delegation or not.
        {subdomain_delegation_enabled, true},

        %% Indicates policy enforced during provider registration:
        %%  open - anyone can register with no restrictions (default)
        %%  restricted - requires a provider registration token,
        %%               which can be issued only by a Onezone admin
        {provider_registration_policy, open},

        %% Also used as the certificate domain and to provider CRLs.
        {http_domain, "127.0.0.1"},

        % Name of OZ instance
        {oz_name, "unnamed"},
        {admin_emails, ["info@onedata.org"]},

        %% DB config
        {db_nodes, ['db@127.0.0.1:11211']},

        %% ===================================================================
        %% PORTS
        %% ===================================================================

        %% Port on which HTTPS server is started
        {https_server_port, 443},
        %% Port on which HTTP server is started
        {http_server_port, 80},

        %% ===================================================================
        %% Server certificates
        %% ===================================================================

        %% NOTE: below envs are overwritten by onepanel during deployment. You
        %% should always use onepanel to manage web certs, unless you really
        %% know what you are doing.
        %% Path to private key used by web server
        {web_key_file, "{{platform_etc_dir}}/certs/web_key.pem"},
        %% Path to certificate used by web server
        {web_cert_file, "{{platform_etc_dir}}/certs/web_cert.pem"},
        %% Path to certificate chain file used by web server
        {web_cert_chain_file, "{{platform_etc_dir}}/certs/web_chain.pem"},

        %% Path to directory with trusted CA certificates
        {cacerts_dir, "{{platform_etc_dir}}/cacerts"},

        %% ===================================================================
        %% HTTP & HTTPS servers config
        %% ===================================================================

        %% Number of accepting processes in the listeners
        {http_acceptors, 20},
        {https_acceptors, 100},
        %% Request timeout in milliseconds, meaning how long the server should
        %% wait for an incoming request since the last activity until it closes
        %% the connection.
        {http_request_timeout, 30000},
        {https_request_timeout, 30000},
        %% Maximum number of HTTP requests without closing the connection
        %% (HTTP/1.1 only)
        {https_max_keepalive, 30},

        %% Prefix to the REST API - all paths must begin with it.
        %% Must begin with slash
        {rest_api_prefix, "/api/v3/onezone"},

        %% ===================================================================
        %% Authentication and authorization
        %% ===================================================================

        %% Macaroons authorization
        {authorization_macaroon_expiration_seconds, 31536000}, % 1 year
%%        {authentication_macaroon_expiration_seconds, 900}, % 15 minutes
        % @todo for now make the authentication macaroons live longer,
        % until automatic refreshing by provider is implemented: VFS-1766
        {authentication_macaroon_expiration_seconds, 36000}, % 10 hours
        %% Macaroons with longer TTL will not be accepted to impose higher
        %% security level.
        {max_provider_macaroon_ttl, 3600}, % in seconds

        {auth_config_file, "{{platform_etc_dir}}/auth.config"},
        {saml_config_file, "{{platform_etc_dir}}/saml.config"},
        % After this time, login procedure via OIDC/SAML expires (if not completed)
        {state_token_ttl_secs, 300},

        %% ===================================================================
        %% GUI config
        %% ===================================================================

        % Session TTL (in seconds)
        {session_ttl, 3600},

        %% Directory where static files of default, embedded GUI are kept.
        %% Used when gui_custom_static_root is non-existent or empty.
        {gui_default_static_root, "{{platform_data_dir}}/gui_static"},
        %% Directory where onezone tries to find static files of a custom GUI.
        %% If the directory is not empty, it will serve the static files
        %% from it. If not, it will fall back to default, embedded GUI.
        {gui_custom_static_root, "/var/www/html/oz_worker"},

        %% Timeout after which to invalidate
        %% basic auth cache record for given user
        {basic_auth_cache_expiration_timeout, 5000},

        %% ===================================================================
        %% Graph Sync config
        %% ===================================================================

        %% Healthcheck interval for changes stream used by Graph Sync server
        {gs_server_stream_healthcheck_interval, 5000},

        %% ===================================================================
        %% DNS config
        %% ===================================================================

        {dns, [
            %% ===================================================================
            %% Static DNS entries
            %% ===================================================================

            %% All record names specified below should only contain the subdomain
            %% part which will be concatenated to the onezone domain.
            %% Subdomain can be left blank (<<>>) to create records
            %% for the onezone domain itself.

            % Static a entries.
            % The subdomain must be a binary and must not begin with the dot character.
            % IPs should be given as a list of tuples
            % Example:
            % {static_a_records, [
            %     {<<"example-subdomain">>, [{10,0,0,1}, {10,0,0,2}]}
            % ]}
            {static_a_records, []},

            % Static ns entries. Each tuple should contain a subdomain name
            % and a list of nameserver domains.
            % Example:
            % {static_ns_records, [
            %     {<<"example-subdomain">>, [
            %         <<"ns1.example-subdomain.onezone.org">>
            %     ]}
            % ]}
            {static_ns_records, []},


            % Static txt entries. Each tuple should contain a subdomain and
            % value.
            % Both subdomain and value should be a binary.
            % Example:
            % {static_txt_records, [
            %     {<<"example-subdomain">>, <<"record-value">>}
            % ]}
            {static_txt_records, []},

            % Static mx entries. Each tuple should contain a subdomain,
            % email server name and preference (integer).
            % Example:
            % {static_mx_records, [
            %     {<<"">>, <<"mail.onezone.org">>, 10}
            % ]}
            {static_mx_records, []},

            % Static cname entries. Each tuple should
            % contain the name (alias, realtive to onezone domain) and domain it should point to.
            % Example:
            % {static_cname_records, [
            %     {<<"www">>, <<"onezone.org">>}
            % ]}
            {static_cname_records, []},

            %% ===================================================================
            %% DNS configuration
            %% ===================================================================

            % maximum number of ips to be presented as subdomain
            % ns1, ns2, ns3 etc. in NS records
            {ns_max_entries, 10},

            % minimum number of resolved nsX domains. If the number specified
            % is higher than number of oz_worker nodes, some domains will resolve
            % to the same IP address. Must not be higher than ns_max_entries
            % Use this option if your domain registrar enforces
            % a minimum number of Nameserver addresses.
            {ns_min_entries, 2},

            %% SOA record parameters
            % Nameserver admin mailbox
            {soa_admin_mailbox, "dns-admin.onedata.org"},
            % This value must be incremented on every update of this config file
            {soa_serial, 2017090401},
            % Time interval before the zone should be refreshed
            {soa_refresh, 7200},
            % Time interval that should elapse before a failed refresh should be retried
            {soa_retry, 1800},
            % Time value that specifies the upper limit on the time interval that
            % can elapse before the zone is no longer authoritative
            {soa_expire, 1209600},
            % Time a NAME ERROR = NXDOMAIN result may be cached by any resolver
            {soa_minimum, 120},

            {a_ttl, 120},
            {ns_ttl, 120},
            {soa_ttl, 120},
            {txt_ttl, 120},
            {mx_ttl, 120}
        ]},

        %% Decides if every user should get a new space when an account for
        %% him is created.
        {enable_automatic_first_space, false},

        %% Minimum size of support that a provider must offer (smaller values
        %% will be declined).
        {minimum_space_support_size, 1000000}, % 1 MB

        %% Predefined groups config - groups that are created automatically
        %% after the application has started. If the groups exist, no action
        %% is performed.
        %% Each group is represented by a map with keys
        %% id, name, oz_privileges.
        %% Allows to specify the ID, name and OZ API privileges of every group.
        %% oz_privileges can be either an explicit list of privileges or a
        %% tuple of atoms indicating module and function to call which must
        %% return the list of privileges.
        {predefined_groups, [
            #{
                id => <<"admins">>,
                name => <<"Admins">>,
                oz_privileges => {privileges, oz_privileges}
            },
            #{
                id => <<"all_users">>,
                name => <<"All users">>,
                oz_privileges => []
            }
        ]},

        %% Decides if global groups should be enabled. If so, every user that
        %% is created will automatically be added to group defined in
        %% the global_groups env variable.
        {enable_global_groups, false},

        %% A list of global groups - every new user is added to them if the
        %% enable_global_groups variable is true. Must contain a list of tuples:
        %%     the first element is the id of a group (must be pre-created using
        %%         the predefined_groups variable)
        %%     the second element is the list of group privileges that will be
        %%         granted by default to users that are added to the group.
        {global_groups, [
            {<<"all_users">>, []}
        ]},

        %% Mapping onepanel_role => [group_id]. When a user is
        %% retrieved from onepanel, his role will be sent in response. This env
        %% allows to define to which groups such user should be added
        %% automatically upon first login.
        %% If the role changes, any consecutive login will cause the user
        %% to be added to all groups connected to his new role, but will not
        %% cause the user to be removed from any group!
        {onepanel_role_to_group_mapping, #{
            <<"admin">> => [<<"admins">>]
        }},

        %% Onepanel interface config
        {onepanel_rest_url, "https://127.0.0.1:9443"},
        {onepanel_users_endpoint, "/api/v3/onepanel/users/"},

        %% OAI-PMH config
        %% Prefix to the OAI-PMH API - all paths must begin with it
        {oai_pmh_api_prefix, "/oai_pmh"}
    ]}
].
